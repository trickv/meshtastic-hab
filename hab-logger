#!/home/trick/venv/bin/python
# -*- coding: utf-8 -*-
import sys

import meshtastic
import meshtastic.serial_interface
import time
from datetime import datetime, timezone


hourago = int(time.time()) - 3600
age_10m = int(time.time()) - 600

iface = meshtastic.serial_interface.SerialInterface()
nodes = iface.nodes

#print(nodes)
import json
print(json.dumps(nodes))

live_nodes = 0


for a in nodes.values():
    if "lastHeard" in a.keys() and "snr" in a.keys():
        if a['lastHeard'] > age_10m:
            live_nodes += 1
        if a['lastHeard'] > hourago:
            print("Live Node: id=\"{}\", longName=\"{}\", shortName=\"{}\" {}".format(a['user']['id'], a['user']['longName'], a['user']['shortName'], a['snr']))
        else:
            print("{} is too old {} {}".format(a['user']['id'], a['lastHeard'], hourago))
            1
    else:
        print("{} has no lastHeard or snr".format(a['user']['id']))
        1

# Extract latitude and longitude for node !433e1118
node_id = '!433e1118'
latitude = longitude = altitude = uptime_seconds = channel_util = air_util = None
try:
    if nodes[node_id]['position']:
        position = nodes[node_id]['position']
        latitude = position['latitude']
        longitude = position['longitude']
        altitude = position['altitude']
    else:
        latitude = longitude = altitude = None

    uptime_seconds = nodes[node_id]['deviceMetrics']['uptimeSeconds']
    channel_util = nodes[node_id]['deviceMetrics']['channelUtilization']
    air_util = nodes[node_id]['deviceMetrics']['airUtilTx']
except Exception as e:
    print("masking exception: {}".format(e))

def send_to_ground(message):
    print("Sending to ground: {}".format(message))
    iface.sendText(message, destinationId='!1fa06c00', wantAck=False, wantResponse=False)

# Get current UTC date and time in ISO format
current_utc_time_iso = datetime.now(timezone.utc).isoformat()

send_to_ground("Hello at {} from lat={} lon={} alt={} chanUtil={} airUtilTx={} uptime={}".format(current_utc_time_iso, latitude, longitude, altitude, channel_util, air_util, uptime_seconds))
send_to_ground("{} live nodes".format(live_nodes))

#iface.sendText("Hello World", destinationId='!1fa06c00', wantAck=False, wantResponse=False)
#iface.sendText("{} live nodes", destinationId='!1fa06c00', wantAck=False, wantResponse=False)

iface.close()
